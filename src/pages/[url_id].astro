---
import { shortendURLTable, eq, db } from "astro:db";
import type { APIContext } from "astro";

export async function GET(context: APIContext) {
  const { params, redirect } = context;
  const { url_id } = params;

  if (!url_id) {
    return redirect("/", 302);
  }

  try {
    const result = await db
      .select()
      .from(shortendURLTable)
      .where(eq(shortendURLTable.hash_url, url_id))
      .limit(1);

    if (result.length === 0 || !result[0]?.url) {
      return redirect("/");
    }

    // Get original URL and normalize it
    const originalUrl = result[0].url.trim();

    try {
      new URL(originalUrl);
      return redirect(originalUrl, 301);
    } catch (error) {
      console.error("Invalid URL format:", originalUrl);
      return redirect("/");
    }
  } catch (error) {
    console.error("Database error:", error);
    return redirect("/");
  }
}
---
