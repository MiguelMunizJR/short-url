---
import Feature from "../components/Feature.astro";
import Layout from "../layouts/Layout.astro";
import Input from "../components/Input.astro";
import { features } from "../assets/features";
import CopyClipboardButton from "../components/CopyClipboardButton.astro";
import RedirectButton from "../components/RedirectButton.astro";
---

<Layout>
  <main
    class="flex pt-24 pb-48 flex-col justify-center bg-gradient-to-b from-30% from-background via-40% via-background to-70% to-purple-gradient text-foreground"
  >
    {/* Hero Section */}
    <section
      class="max-w-2xl mx-auto pt-20 sm:pt-34 md:pt-40 px-6 sm:px-0 flex flex-col justify-center items-center text-center text-pretty animate-fade-in-down"
    >
      <h1
        class="mb-4 text-4xl font-bold tracking-tight sm:text-4xl md:text-6xl"
      >
        <span class="text-purple">🌐Acorta </span>tus URLs, tu mejor <span
          class="text-orange">Opción</span
        >
      </h1>
      <p
        class="mx-auto mb-8 text-base md:text-base max-w-md text-font-secondary"
      >
        Crear enlaces memorables en segundos. Seguimiento de clicks.
      </p>
      <Input />
    </section>

    {/* URL Result Section */}
    <section
      class="max-w-2xl pt-0 lg:pt-6 mx-auto flex-col justify-center items-center text-center text-pretty animate-fade-in-down px-6 sm:px-0 flex"
    >
      <article
        class="mt-2 flex w-full sm:w-136 md:max-w-lg rounded-lg ring ring-primary/40 bg-card p-3 md:p-4 relative flex-col items-center justify-center drop-shadow-lg"
      >
        <article class="w-full flex flex-col justify-center gap-4 mb-6">
           <div class="flex justify-beetwen itens-center w-full h-auto relative ">
              <p class="text-secondary-light text-base text-balanced">
                <span id="created-at"></span>
              </p>
              <div class="flex gap-4 items-center absolute right-0 top-0">
                <CopyClipboardButton />
                <RedirectButton />
              </div>
            </div>
          <div
            id="display-url"
            class="h-16 md:h-14 max-w-60 sm:min-w-100 sm:max-w-full flex items-center justify-center rounded bg-card-foreground/50 transition-all ease-in-out duration-200 relative drop-shadow-xl mx-auto p-4 overflow-hidden"
          >
            <p
              id="shortened-url-display"
              class="font-semibold text-base text-balanced w-full"
            >
            <span class="text-primary-dark/60 animate-fade-in text-wrap line-clamp-1 break-words text-elipsis overflow-hidden max-w-full">
              ydydkasdljajbdbdbashdadsydsvdasyhdhdhdhe53ggav
              </span>
            </p>
          </div>
          <p
            class="text-xs text-font-secondary text-center flex flex-col items-center mx-auto w-40 max-h-20 max-w-40"
          >
            URL original:
            <span
              id="original-url"
              class="text-secondary-dark/80 font-semibold line-clamp-2 break-words overflow-hidden max-w-full"
            >
              https://www.example.com/this-Is.an?example=url
            </span>
          </p>
        </article>

        <div
          class="w-full flex justify-around items-center text-xs sm:text-base font-medium text-font-secondary gap-2 text-balanced"
        >
          <p class="text-secondary-light">
            <span id="expire-at" class="text-secondary-light font-semibold"
            ></span>
          </p>
          <p class="text-secondary-light">
            <span id="clicks"></span>
          </p>
        </div>
      </article>

      <p
        class="text-xs text-font-secondary text-center text-pretty py-4 w-3/4 mx-auto"
      >
        No necesitas registrarte. Usos básicos gratuitos. 😉
      </p>
    </section>

    {/* Features Section */}
    <section class="pt-26 pb-20 w-full flex flex-col items-center">
      <div class="container w-11/12 sm:w-xl md:w-2xl lg:w-3xl xl:w-4xl">
        <h2
          class="mb-12 text-center text-2xl md:text-3xl font-bold animate-fade-in animate-delay-100"
        >
          ¿Por que <span class="text-secondary">Shortend</span><span
            class="text-primary">URL</span
          >?
        </h2>
        <div
          class="grid gap-8 md:grid-cols-3 animate-fade-in animate-delay-200"
        >
          {features?.map((feature) => <Feature {...feature} />)}
        </div>
      </div>
    </section>
  </main>

  <script>
    import confetti from "canvas-confetti";
    import {
      notyfInstance,
      isLightTheme,
      handleSubmit,
      actionsDOM,
    } from "../assets/utils";
    const notyf = notyfInstance();

    const $form = document.getElementById("shorten-form");
    const $inputURL = document.getElementById("inputURL") as HTMLInputElement;
    const $displayElement = document.getElementById("shortened-url-display");
    const $displayURL = document.getElementById("display-url");
    const $originalURL = document.getElementById("original-url");
    const $createdAt = document.getElementById("created-at");
    const $expireAt = document.getElementById("expire-at");
    const $clicks = document.getElementById("clicks");

    // Icons
    const $copyIcon = document.getElementById("copy-icon");

    // Buttons
    const $copyBtn = document.getElementById("copy-btn");
    const $openUrlBtn = document.getElementById("open-url-btn");

    const isLight = document.documentElement.classList.contains("light");
    isLightTheme(isLight, $displayElement as HTMLElement);
    let shortendURL = "";
    let clicksVariable: number = 0;
    let hashURL: string = "";

    $form?.addEventListener("submit", async (event) => {
      event.preventDefault();

      const { shortendURLData, error, message } = await handleSubmit(event);
      if (error && message) {
        notyf.error(message);
        return;
      }

      shortendURL = shortendURLData?.shortUrl;
      hashURL = shortendURLData?.hash_url;
      clicksVariable = shortendURLData?.clicks;

      actionsDOM(
        {
          $displayElement,
          $displayURL,
          $originalURL,
          $createdAt,
          $expireAt,
          $clicks,
          $copyBtn,
          $openUrlBtn,
          $inputURL,
        },
        shortendURLData
      );

      confetti({
        particleCount: 100,
        spread: 90,
        origin: { y: 0.7 },
        disableForReducedMotion: true,
      });
    });

    // Copiar URL al hacer clic en la card
    $displayURL?.addEventListener("click", (e) => {
      e.stopPropagation();
      if ($displayURL?.textContent?.includes("Ejemplo")) return;
      const url = shortendURL || "";

      navigator.clipboard.writeText(url);
      $displayURL?.classList.add("bg-background/90");
      notyf.success("URL copiada al portapapeles");
    });

    // Copiar URL al hacer clic en el botón de copiar
    $copyBtn?.addEventListener("click", (e) => {
      e.stopPropagation();
      if ($displayURL?.textContent?.includes("Ejemplo")) return;

      const $checkIcon = document.getElementById("check-icon");
      const url = shortendURL || "";

      navigator.clipboard.writeText(url);
      $copyIcon?.classList.add("scale-0", "opacity-0");
      $checkIcon?.classList.remove("scale-0", "opacity-0");
      $checkIcon?.classList.add("scale-110");

      setTimeout(() => {
        $checkIcon?.classList.add("scale-0", "opacity-0");
        $checkIcon?.classList.remove("scale-110");
        $copyIcon?.classList.remove("scale-0", "opacity-0");
      }, 2000);
      return;
    });

    // Redirigir URL al hacer clic en el botón de abrir
    $openUrlBtn?.addEventListener("click", async (e) => {
      e.stopPropagation();

      if ($displayURL?.textContent?.includes("Ejemplo")) return;
      const url = shortendURL || "";
      const shortUrl = $displayElement?.textContent?.trim();

      try {
        if (shortUrl) {
          await fetch("/api/track-click", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({ hashURL, clicksVariable }),
          });
        }

        window.open(url, "_blank");
      } catch (error) {
        console.error("Error al abrir URL:", error);
      }
      return;
    });
  </script>
</Layout>
